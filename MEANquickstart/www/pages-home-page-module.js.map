{"version":3,"sources":["webpack:///./src/app/pages/home-page/home-page.component.html","webpack:///./src/app/pages/home-page/home-page.component.ts","webpack:///./src/app/pages/home-page/module.ts","webpack:///./src/app/pages/home-page/routes.ts","webpack:///./src/app/services/auth/auth.service.ts"],"names":[],"mappings":"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","file":"pages-home-page-module.js","sourcesContent":["module.exports = \"<app-my-header\\n    [path]=\\\"'/'\\\"\\n></app-my-header>\\n\\n<app-login-form\\n    [formObject]=\\\"loginObject\\\"\\n    (sendFormData)=\\\"loginUser($event)\\\"\\n></app-login-form>\\n\\n<app-register-form\\n    [formObject]=\\\"registerObject\\\"\\n    (sendFormData)=\\\"registerNewUser($event)\\\"\\n>\\n</app-register-form>\"","/*\nImports\n*/\n  // Angular compoenents\n  import { Component, OnInit } from '@angular/core';\n  import { Router } from \"@angular/router\";\n\n  // APP components\n  import { UserModel } from \"../../models/user.model\";\n  import { AuthService } from \"../../services/auth/auth.service\";\n  import { UserService } from \"../../services/user/user.service\";\n//\n\n/*\nDefinitino\n*/\n  @Component({\n    selector: 'app-home-page',\n    templateUrl: './home-page.component.html',\n\n    // Les services sont à ajouter dasn le tableau des providers\n    providers: [ AuthService, UserService ]\n  })\n//\n\n/*\nExport\n*/\n  export class HomePageComponent implements OnInit {\n\n    /*\n    Variables\n    */\n      public registerObject: UserModel = {\n        firstName: ``,\n        lastName: ``,\n        email: ``,\n        password: ``,\n        repeatePassword: ``,\n        cgu: false\n      }\n\n      public loginObject: UserModel = {\n        email: ``,\n        password: ``,\n      }\n\n      private userToken: String;\n    //\n\n    // Injection des services et du router\n    constructor(\n      private authService: AuthService,\n      private userService: UserService,\n      private router: Router\n    ) { }\n\n    // Création d'une fonction pour inscrire un utilisateur\n    public registerNewUser = ( user: UserModel ) => {\n      console.log(`Validated form HOME`, user);\n\n      // Contacter le service pour inscrire l'utilisateur\n      this.authService.userRegister(user)\n      .then( apiSuccess => console.log(apiSuccess) )\n      .catch( apiError => console.error(apiError) )\n\n    };\n\n    // Création d'une fonction pour connecter un utilisateur\n    public loginUser = ( user: UserModel ) => {\n      // Contacter le service pour inscrire l'utilisateur\n      this.authService.userLogin(user)\n      .then( apiSuccess => {\n        console.log(apiSuccess)\n\n        // Stocker le token utilisateur dans le navigateur\n        localStorage.setItem('MEANtoken', apiSuccess.data.token);\n\n        // Rediriger l'utilisateur vers la page todo\n        this.router.navigateByUrl('/todo');\n      })\n      .catch( apiError => console.error(apiError) )\n    };\n\n    // Création d'une fonction pour connecter automatiquement l'utilisateur avec son token\n    private checkUserToken = () => {\n      if(this.userToken != undefined){\n        // Contacter le service pour inscrire l'utilisateur\n        this.userService.getUserInfos(this.userToken)\n        .then( () => {\n          // Rediriger l'utilisateur vers la page todo\n          this.router.navigateByUrl('/todo');\n        })\n        .catch( apiError => console.error(apiError) )\n      }\n    }\n\n    ngOnInit() {\n      // Récupérer le token au chargement du composant\n      this.userToken = localStorage.getItem('MEANtoken');\n\n      // Appeler la fonction pour vérifier le token utilisateur\n      this.checkUserToken();\n    }\n\n  }\n//","/*\nImports\n*/\n    // Angular components\n    import { NgModule } from \"@angular/core\";\n    import { ComponentRouter } from \"./routes\";\n\n    // APP components\n    import { AppFormModule } from \"../../shared/form-modules/form.module\";\n    import { UserInterfaceModule } from \"../../shared/user-interface/user-interface.module\";\n    import { HomePageComponent } from \"./home-page.component\";\n//\n\n/*\nDefinition\n*/\n    @NgModule({\n        declarations: [ HomePageComponent ],\n        \n        // Les modules sont à renseigner dans le tableau des imports\n        imports: [ ComponentRouter, AppFormModule, UserInterfaceModule ]\n    })\n//\n\n/*\nExport\n*/\n    export class HomePageModule {};\n//","/*\nImport\n*/\n    import { ModuleWithProviders } from '@angular/core';\n    import { Routes, RouterModule } from \"@angular/router\";\n\n    import { HomePageComponent } from \"./home-page.component\";\n//\n\n/*\nDefinition\n*/\n    const routes: Routes = [\n        {\n            path: '',\n            component: HomePageComponent\n        }\n    ]\n//\n\n/*\nExport\n*/\n    export const ComponentRouter: ModuleWithProviders = RouterModule.forChild(routes)\n//","/*\nImports\n*/\n  import { Injectable } from '@angular/core';\n  import { HttpClient, HttpHeaders } from \"@angular/common/http\";\n  import { UserModel } from \"../../models/user.model\";\n//\n\n/*\nDefinition\n*/\n  @Injectable({\n    providedIn: 'root'\n  })\n//\n\n/*\nExport\n*/\n  export class AuthService {\n\n    // Définir l'adresse de l'API\n    private apiUrl = '/api/auth'\n\n    // Injecter le service HttpCLient dans la class\n    constructor(\n      private http: HttpClient\n    ) { }\n\n    // Créer une fonction pour enregistrer un utilisateur\n    public userRegister( user: UserModel ): Promise<any> {\n\n      // Supprimer la propriété repeatePassword de l'ojet user\n      delete user.repeatePassword;\n\n      // Configurer la requête\n      let myHeader = new HttpHeaders().set( 'Content-Type', 'application/json')\n\n      // 3 paramêtre : url, data, header + claccback\n      return this.http.post(`${this.apiUrl}/register`, user, { headers: myHeader })\n      .toPromise().then(this.getData).catch(this.handelError)\n    }\n\n    // Créer une fonction pour connecter un utilisateur\n    public userLogin( user: UserModel ): Promise<any> {\n      // Configurer la requête\n      let myHeader = new HttpHeaders().set( 'Content-Type', 'application/json')\n\n      // 3 paramêtre : url, data, header + claccback\n      return this.http.post(`${this.apiUrl}/login`, user, { headers: myHeader })\n      .toPromise().then(this.getData).catch(this.handelError)\n    }\n\n    // Fonction pour traiter les success des requêtes\n    private getData( response: any ){\n      // return res || {};\n      return Promise.resolve( response || {} );\n    }\n\n    // Fonction pour traiter les erreurs des requête\n    private handelError( response: any ){\n      return Promise.reject( response.error );\n    }\n  }\n//"],"sourceRoot":""}